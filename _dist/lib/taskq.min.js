/*! ****************************************************************************
 * TaskQ v1.0.2
 *
 * A library that processes tasks sequentially.
 * (you can download it from npm or github repositories)
 * Copyright (c) 2024 Mobilabs <contact@mobilabs.fr> (http://www.mobilabs.fr).
 * Released under the MIT license. You may obtain a copy of the License
 * at: http://www.opensource.org/licenses/mit-license.php).
 * Built from ES6lib v2.2.0.
 * ************************************************************************** */
!function(t,n){"use strict";"function"==typeof define&&define.amd?define([""],n):"object"==typeof exports?module.exports=n(t):t.TaskQ=n(t)}(this,(t=>{"use strict";let n,i={};return function(){const e=t.TaskQ;let s;n=function(){const t=Object.create(s);return t._library={name:"TaskQ",version:"1.0.2"},t._dQ={},t},n.NAME="TaskQ",n.VERSION="1.0.2",n._setTestMode=function(){return[]},n.noConflict=function(){return t.TaskQ=e,this},s={whoami(){return this._library},pushQ(t,n){return i.pushQ(this._dQ,t,n),this},popQ(t,n){return i.popQ(this._dQ,t,n),this}}}(),function(){function t(t,n){"string"!=typeof n||Object.prototype.hasOwnProperty.call(t,n)||(t[n]={firing:!1,listeners:[]})}i={pushQ(n,i,e){t(n,i),"string"==typeof i&&"function"==typeof e&&(n[i].listeners.push(e),n[i].firing||function(t,n,i){const e=t[n].listeners;t[n].firing=!0,function s(){e.length>0?e.shift().apply(i||{},[s].concat(Array.prototype.slice.call(arguments,0))):t[n].firing=!1}()}(n,i))},popQ(n,i,e){t(n,i),"string"==typeof i&&"function"==typeof e&&(n[i].listeners.push(e),n[i].firing||function(t,n,i){const e=t[n].listeners;t[n].firing=!0,function s(){if(e.length>0){for(;e.length>1;)e.shift();e.shift().apply(i||{},[s].concat(Array.prototype.slice.call(arguments,0)))}else t[n].firing=!1}()}(n,i))}}}(),n}));
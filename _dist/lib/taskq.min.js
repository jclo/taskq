/*! ****************************************************************************
 * TaskQ v0.0.4
 *
 * A library that processes tasks sequentially.
 * (you can download it from npm or github repositories)
 * Copyright (c) 2020 Mobilabs <contact@mobilabs.fr> (http://www.mobilabs.fr).
 * Released under the MIT license. You may obtain a copy of the License
 * at: http://www.opensource.org/licenses/mit-license.php).
 * Built from ES6libplus v0.0.8.
 * ************************************************************************** */
!function(t,n){"use strict";"function"==typeof define&&define.amd?define([""],n):"object"==typeof exports?(module.exports=n(t),null===t.TaskQ&&(t.TaskQ=n(t))):t.TaskQ=n(t)}(this,t=>{"use strict";let n,e={src:{taskq:{},private:{taskq:{}}},extend:function(t,n){for(var e=Object.keys(n),i=0;i<e.length;i++)t[e[i]]=n[e[i]]}};return function(){const i=e.src.private.taskq,s=t.TaskQ;let r;n=function(){const t=Object.create(r);return t._dQ={},t},n.VERSION="0.0.4",n.noConflict=function(){return t.TaskQ=s,this},r={pushQ(t,n){return i.pushQ(this._dQ,t,n),this},popQ(t,n){return i.popQ(this._dQ,t,n),this}}}(),function(){function t(t,n){"string"!=typeof n||Object.prototype.hasOwnProperty.call(t,n)||(t[n]={firing:!1,listeners:[]})}const n={pushQ(n,e,i){t(n,e),"string"==typeof e&&"function"==typeof i&&(n[e].listeners.push(i),n[e].firing||function(t,n,e){const i=t[n].listeners;t[n].firing=!0,function s(){i.length>0?i.shift().apply(e||{},[s].concat(Array.prototype.slice.call(arguments,0))):t[n].firing=!1}()}(n,e))},popQ(n,e,i){t(n,e),"string"==typeof e&&"function"==typeof i&&(n[e].listeners.push(i),n[e].firing||function(t,n,e){const i=t[n].listeners;t[n].firing=!0,function s(){if(i.length>0){for(;i.length>1;)i.shift();i.shift().apply(e||{},[s].concat(Array.prototype.slice.call(arguments,0)))}else t[n].firing=!1}()}(n,e))}};e.extend(e.src.private.taskq,n)}(),n});